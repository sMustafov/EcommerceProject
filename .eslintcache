[{"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\index.js":"1","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\App.js":"2","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\lib\\commerce.js":"3","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\index.js":"4","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\Cart.jsx":"5","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Products.jsx":"6","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\styles.js":"8","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\styles.js":"9","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Navbar\\styles.js":"10","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\CartItem\\CartItem.jsx":"11","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Product\\Product.jsx":"12","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\CartItem\\styles.js":"13","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Product\\styles.js":"14","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":146,"mtime":1608557544196,"results":"21","hashOfConfig":"22"},{"size":2159,"mtime":1608660772525,"results":"23","hashOfConfig":"22"},{"size":125,"mtime":1608565141577,"results":"24","hashOfConfig":"22"},{"size":230,"mtime":1608649018393,"results":"25","hashOfConfig":"22"},{"size":2001,"mtime":1608648278571,"results":"26","hashOfConfig":"22"},{"size":711,"mtime":1608565141573,"results":"27","hashOfConfig":"22"},{"size":1459,"mtime":1608581890683,"results":"28","hashOfConfig":"22"},{"size":569,"mtime":1608581890678,"results":"29","hashOfConfig":"22"},{"size":286,"mtime":1608557544184,"results":"30","hashOfConfig":"22"},{"size":1564,"mtime":1608557544155,"results":"31","hashOfConfig":"22"},{"size":1312,"mtime":1608648073627,"results":"32","hashOfConfig":"22"},{"size":1318,"mtime":1608565141568,"results":"33","hashOfConfig":"22"},{"size":332,"mtime":1608581890677,"results":"34","hashOfConfig":"22"},{"size":440,"mtime":1608557544175,"results":"35","hashOfConfig":"22"},{"size":2358,"mtime":1608663738160,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1608648919412,"results":"37","hashOfConfig":"22"},{"size":4759,"mtime":1608663438954,"results":"38","hashOfConfig":"22"},{"size":443,"mtime":1608664021622,"results":"39","hashOfConfig":"22"},{"size":560,"mtime":1608662931165,"results":"40","hashOfConfig":"22"},{"size":1076,"mtime":1608663973794,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18rc0dm",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\index.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\App.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\lib\\commerce.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\index.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Navbar\\Navbar.jsx",["84","85"],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Product\\styles.js",["86"],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["87","88","89","90"],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\AddressForm.jsx",["91","92"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchShippingSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchShippingSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput name=\"firstName\" label=\"First name\" />\r\n            <FormInput name=\"lastName\" label=\"Last name\" />\r\n            <FormInput name=\"address1\" label=\"Address line 1\" />\r\n            <FormInput name=\"email\" label=\"Email\" />\r\n            <FormInput name=\"city\" label=\"City\" />\r\n            <FormInput name=\"zip\" label=\"Zip / Postal code\" />\r\n            \r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((shippingOption) => ({ id: shippingOption.id, label: `${shippingOption.description} - (${shippingOption.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <br />\r\n          \r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\nexport default AddressForm;",["93","94"],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\PaymentForm.jsx",["95","96","97","98","99","100","101"],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"102","severity":1,"message":"103","line":2,"column":46,"nodeType":"104","messageId":"105","endLine":2,"endColumn":54},{"ruleId":"102","severity":1,"message":"106","line":2,"column":56,"nodeType":"104","messageId":"105","endLine":2,"endColumn":60},{"ruleId":"102","severity":1,"message":"107","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":21},{"ruleId":"102","severity":1,"message":"108","line":2,"column":55,"nodeType":"104","messageId":"105","endLine":2,"endColumn":71},{"ruleId":"102","severity":1,"message":"109","line":2,"column":73,"nodeType":"104","messageId":"105","endLine":2,"endColumn":80},{"ruleId":"102","severity":1,"message":"110","line":2,"column":82,"nodeType":"104","messageId":"105","endLine":2,"endColumn":88},{"ruleId":"102","severity":1,"message":"111","line":32,"column":11,"nodeType":"104","messageId":"105","endLine":32,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":41,"column":6,"nodeType":"114","endLine":41,"endColumn":8,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":49,"column":6,"nodeType":"114","endLine":49,"endColumn":27,"suggestions":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"102","severity":1,"message":"122","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":20},{"ruleId":"102","severity":1,"message":"110","line":2,"column":22,"nodeType":"104","messageId":"105","endLine":2,"endColumn":28},{"ruleId":"102","severity":1,"message":"109","line":2,"column":30,"nodeType":"104","messageId":"105","endLine":2,"endColumn":37},{"ruleId":"102","severity":1,"message":"123","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":18},{"ruleId":"102","severity":1,"message":"124","line":3,"column":20,"nodeType":"104","messageId":"105","endLine":3,"endColumn":31},{"ruleId":"102","severity":1,"message":"125","line":3,"column":33,"nodeType":"104","messageId":"105","endLine":3,"endColumn":49},{"ruleId":"102","severity":1,"message":"126","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":20},"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'CardContent' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'backStep' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["128"],"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"'Typography' is defined but never used.","'Elements' is defined but never used.","'CardElement' is defined but never used.","'ElementsConsumer' is defined but never used.","'loadStripe' is defined but never used.",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [checkoutToken.id]",{"range":"135","text":"136"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"137","text":"138"},[1716,1718],"[checkoutToken.id]",[1977,1998],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]