[{"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\index.js":"1","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\App.js":"2","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\lib\\commerce.js":"3","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\index.js":"4","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\Cart.jsx":"5","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Products.jsx":"6","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\styles.js":"8","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\styles.js":"9","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Navbar\\styles.js":"10","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\CartItem\\CartItem.jsx":"11","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Product\\Product.jsx":"12","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\CartItem\\styles.js":"13","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Product\\styles.js":"14","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":146,"mtime":1608557544196,"results":"21","hashOfConfig":"22"},{"size":2946,"mtime":1608675354082,"results":"23","hashOfConfig":"22"},{"size":125,"mtime":1608565141577,"results":"24","hashOfConfig":"22"},{"size":230,"mtime":1608649018393,"results":"25","hashOfConfig":"22"},{"size":2001,"mtime":1608648278571,"results":"26","hashOfConfig":"22"},{"size":711,"mtime":1608565141573,"results":"27","hashOfConfig":"22"},{"size":1459,"mtime":1608581890683,"results":"28","hashOfConfig":"22"},{"size":569,"mtime":1608581890678,"results":"29","hashOfConfig":"22"},{"size":286,"mtime":1608557544184,"results":"30","hashOfConfig":"22"},{"size":1564,"mtime":1608557544155,"results":"31","hashOfConfig":"22"},{"size":1312,"mtime":1608648073627,"results":"32","hashOfConfig":"22"},{"size":1318,"mtime":1608565141568,"results":"33","hashOfConfig":"22"},{"size":332,"mtime":1608581890677,"results":"34","hashOfConfig":"22"},{"size":440,"mtime":1608557544175,"results":"35","hashOfConfig":"22"},{"size":2469,"mtime":1608675529966,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1608648919412,"results":"37","hashOfConfig":"22"},{"size":4759,"mtime":1608663438954,"results":"38","hashOfConfig":"22"},{"size":3017,"mtime":1608675636760,"results":"39","hashOfConfig":"22"},{"size":560,"mtime":1608662931165,"results":"40","hashOfConfig":"22"},{"size":1076,"mtime":1608663973794,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"18rc0dm",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\index.js",[],["86","87"],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\App.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\lib\\commerce.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\index.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Navbar\\Navbar.jsx",["88","89"],"import React from 'react';\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport logo from '../../assets/commerce.png';\nimport useStyles from './styles';\n\nconst Navbar = ({ totalItems }) => {\n    const classes = useStyles();\n    const location = useLocation();\n    \n    return (\n        <>\n            <AppBar position='fixed' className={classes.appBar} color='inherit'>\n                <Toolbar>\n                    <Typography component={Link} to=\"/\" ariant='h6' className={classes.title} color='inherit'>\n                        <img src={logo} alt='Commerce.js' height='25px' className={classes.image} />\n                        Commerce.js\n                    </Typography>\n                    <div className={classes.grow}/>\n\n                    { location.pathname === '/' && (\n                        <div className={classes.button}>\n                            <IconButton component={Link} to=\"/cart\" aria-label='Show cart items' color='inherit'>\n                                <Badge badgeContent={totalItems} color='secondary'>\n                                    <ShoppingCart/>\n                                </Badge>\n                            </IconButton>\n                        </div> )}\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n}\n\nexport default Navbar\n","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\Products\\Product\\styles.js",["90"],"import { CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n    root: {\n        maxWidth: '100%'\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%' // 16:9\n    },\n    cardActions: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n    cardContent: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    }\n}));","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["91","92","93"],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\AddressForm.jsx",["94","95"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchShippingSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchShippingSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput name=\"firstName\" label=\"First name\" />\r\n            <FormInput name=\"lastName\" label=\"Last name\" />\r\n            <FormInput name=\"address1\" label=\"Address line 1\" />\r\n            <FormInput name=\"email\" label=\"Email\" />\r\n            <FormInput name=\"city\" label=\"City\" />\r\n            <FormInput name=\"zip\" label=\"Zip / Postal code\" />\r\n            \r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((shippingOption) => ({ id: shippingOption.id, label: `${shippingOption.description} - (${shippingOption.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <br />\r\n          \r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\nexport default AddressForm;","C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\sevgi\\Desktop\\React-Ecommerce-Project\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":46,"nodeType":"102","messageId":"103","endLine":2,"endColumn":54},{"ruleId":"100","severity":1,"message":"104","line":2,"column":56,"nodeType":"102","messageId":"103","endLine":2,"endColumn":60},{"ruleId":"100","severity":1,"message":"105","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":21},{"ruleId":"100","severity":1,"message":"106","line":2,"column":55,"nodeType":"102","messageId":"103","endLine":2,"endColumn":71},{"ruleId":"100","severity":1,"message":"107","line":2,"column":73,"nodeType":"102","messageId":"103","endLine":2,"endColumn":80},{"ruleId":"100","severity":1,"message":"108","line":2,"column":82,"nodeType":"102","messageId":"103","endLine":2,"endColumn":88},{"ruleId":"109","severity":1,"message":"110","line":41,"column":6,"nodeType":"111","endLine":41,"endColumn":8,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":49,"column":6,"nodeType":"111","endLine":49,"endColumn":27,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'CardContent' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"123","text":"124"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"125","text":"126"},[1716,1718],"[checkoutToken.id]",[1977,1998],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]